@using OrangeRedDotNet.Models
@using OrangeRedDotNet.Models.Comments
@using System.Web

@if (Comment.Data is CommentData commentData)
{
    <Card TextColor="ThemeService.AppTheme.TextColor"
      Background="ThemeService.AppTheme.Background"
      Margin="ThemeService.AppTheme.SpacingSame"
      Border="@(commentData.Stickied ? Border.Success : ThemeService.AppTheme.Border)"
      @ondblclick="() => RepliesCollapsed = !RepliesCollapsed">
        <CardBody>
            <Row>
                <Column>
                    <CardSubtitle Size="6"
                              Margin="ThemeService.AppTheme.SpacingSame">
                        <Anchor Class="text-decoration-none"
                            To="@($"/user/{commentData.Author}")">
                            /u/@commentData.Author
                        </Anchor>
                        <Flair FlairBackgroundColor="@commentData.AuthorFlairBackgroundColor"
                           FlairRichtext="@commentData.AuthorFlairRichtext"
                           FlairText="@commentData.AuthorFlairText"
                           FlairTextColor="@commentData.AuthorFlairTextColor"
                           FlairType="@commentData.AuthorFlairType"
                           IsOriginalPoster="@(commentData.Author.Equals(OriginalPoster))" />
                    </CardSubtitle>
                    <CardSubtitle Size="6"
                              Margin="ThemeService.AppTheme.SpacingSame"
                              TextColor="TextColor.Muted">
                        @commentData.CreatedUtc.ToLocalDateTime()
                    </CardSubtitle>
                    <Awardings Data="@commentData.AllAwardings" />
                    <Flair Stickied="@commentData.Stickied"
                       Locked="@commentData.Locked"
                       Saved="@commentData.Saved"
                       Controversial="@((RedditService.Preferences?.HighlightControversial ?? false) && (commentData.Controversiality > 0))" />
                    @if (!RepliesCollapsed)
                    {
                        <Row NoGutters="true">
                            @((MarkupString)HttpUtility.HtmlDecode(commentData.BodyHtml))
                        </Row>
                    }
                </Column>
            </Row>
        </CardBody>
        <CardFooter Class="border-secondary">
            <Row>
                @if (!RepliesCollapsed)
                {
                    <Column ColumnSize="ColumnSize.IsAuto">
                        <VoteInput Likes="@commentData.Likes"
                           Score="@commentData.Score"
                           ScoreHidden="@commentData.ScoreHidden"
                           Id="@commentData.Name"
                           Archived="@commentData.Archived" />
                    </Column>
                }
                <Column ColumnSize="ColumnSize.IsAuto">
                    <Button Color="ThemeService.AppTheme.DefaultButtonColor"
                        Border="ThemeService.AppTheme.Border"
                        @onclick="() => RepliesCollapsed = !RepliesCollapsed">
                        <span class="oi @(RepliesCollapsed ? "oi-chevron-bottom" : "oi-chevron-top")"></span>
                    </Button>
                </Column>
                @if (!RepliesCollapsed && RedditService.LoggedIn)
                {
                    <Column ColumnSize="ColumnSize.IsAuto">
                        <Button Color="ThemeService.AppTheme.DefaultButtonColor"
                        Border="ThemeService.AppTheme.Border"
                        @onclick="SaveToggleButton_OnClick">
                            <span class="oi oi-bookmark @(commentData.Saved ? "text-primary" : "")"></span>
                        </Button>
                    </Column>
                }
                @if (RepliesCollapsed)
                {
                    <Column ColumnSize="ColumnSize.IsAuto"
                    Flex="Flex.JustifyContent.Center.Column">
                        <span>@(commentData.Replies?.Data?.Children?.Count ?? 0) children comments</span>
                    </Column>
                }
            </Row>
        </CardFooter>
    </Card>
    @if (!RepliesCollapsed && commentData.Replies != null && commentData.Replies?.Data?.Children?.Count > 0)
    {
        <Div Margin="ThemeService.AppTheme.SpacingSame"
     Class="comment-border">
            <Div Margin="Margin.Is2.FromStart">
                <CommentsList Comments="@commentData.Replies"
                      OriginalPoster="@OriginalPoster"
                      LinkFullName="@LinkFullName"
                      CommentSort="@CommentSort" />
            </Div>
        </Div>
    }
}
else if (Comment.Data is MoreData moreData)
{
    @foreach (var comment in MoreComments)
    {
        <CommentCard Comment="@comment"
             OriginalPoster="@OriginalPoster"
             LinkFullName="@LinkFullName"
             CommentSort="@CommentSort" />
    }
    @if (MoreLoaded)
    {
        @if (moreData.Children.Count > 0)
        {
            <Button Color="Color.Link"
        Class="text-decoration-none"
        @onclick="MoreCommentsButton_OnClick">
                Load more comments (@moreData.Count replies)
            </Button>
            <br />
        }
    }
    else
    {
        <Paragraph>
            Loading...
        </Paragraph>
    }
}