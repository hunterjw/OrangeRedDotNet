@using System.Web

@if (SubredditDetails != null)
{
    <Card TextColor="App.CardTextColor" Background="App.CardBackground" Margin="Margin.Is1.FromBottom">
        <CardBody>
            <Row>
                <Column ColumnSize="ColumnSize.IsAuto" Flex="Flex.JustifyContent.Center.Column" Width="Width.Is100" Class="subreddit-icon-col">
                    <Image Border="Border.Rounded" Source="@GetIconUrl()" />
                </Column>
                <Column>
                    <CardSubtitle Size="6" TextColor="TextColor.Muted" Margin="Margin.Is1.FromBottom">
                        <Anchor Class="text-decoration-none" To="@SubredditDetails.Data.Url">
                            @SubredditDetails.Data.Url
                        </Anchor>
                    </CardSubtitle>
                    <CardTitle Size="4">
                        @GetTitle()
                    </CardTitle>
                    @if (!IsUser)
                    {
                        <CardSubtitle Size="6" TextColor="TextColor.Muted" Margin="Margin.Is1.FromBottom">
                            @SubredditDetails.Data.Subscribers.ToDisplayString() subscribers
                        </CardSubtitle>
                    }
                    @if (SubredditDetails.Data.AccountsActive.HasValue)
                    {
                        <CardSubtitle Size="6" TextColor="TextColor.Muted" Margin="Margin.Is1.FromBottom">
                            @SubredditDetails.Data.AccountsActive.Value.ToDisplayString() online
                        </CardSubtitle>
                    }
                    <CardSubtitle Size="6" TextColor="TextColor.Muted" Margin="Margin.Is1.FromBottom">
                        Created @SubredditDetails.Data.CreatedUtc.ToLocalDateTime()
                    </CardSubtitle>
                    <Flair Over18="@SubredditDetails.Data.Over18"
                       Banned="@(SubredditDetails.Data.UserIsBanned ?? false)"
                       Contributor="@(SubredditDetails.Data.UserIsContributor ?? false)"
                       Moderator="@(SubredditDetails.Data.UserIsModerator ?? false)"
                       Muted="@(SubredditDetails.Data.UserIsMuted ?? false)"
                       Subscribed="@(SubredditDetails.Data.UserIsSubscriber ?? false)" />
                    @((MarkupString)HttpUtility.HtmlDecode(SubredditDetails.Data.PublicDescriptionHtml))
                </Column>
            </Row>
            @if (!string.IsNullOrWhiteSpace(SubredditDetails.Data.DescriptionHtml) && !ContentCollapsed)
            {
                <Row Margin="Margin.Is3.FromTop" NoGutters Flex="Flex.JustifyContent.Center.Row">
                    @((MarkupString)HttpUtility.HtmlDecode(SubredditDetails.Data.DescriptionHtml))
                </Row>
            }
        </CardBody>
        <CardFooter>
            <Row>
                @if (!string.IsNullOrWhiteSpace(SubredditDetails.Data.DescriptionHtml))
                {
                    <Column ColumnSize="ColumnSize.IsAuto">
                        <Button Color="App.DefaultButtonColor" @onclick="() => ContentCollapsed = !ContentCollapsed">
                            <span class="oi @(ContentCollapsed ? "oi-chevron-bottom" : "oi-chevron-top")"></span>
                        </Button>
                    </Column>
                }
                @if (RedditService.LoggedIn)
                {
                    <Column ColumnSize="ColumnSize.IsAuto">
                        <Button Color="App.DefaultButtonColor" @onclick="SubscribeButton_OnClick">
                            @(SubredditDetails.Data.UserIsSubscriber ?? false ? "Unsubscribe" : "Subscribe")
                        </Button>
                    </Column>
                    <Column ColumnSize="ColumnSize.IsAuto">
                        <Button Color="App.DefaultButtonColor" @onclick="AddToMultiRedditButton_OnClick">
                            Add to MultiReddit
                        </Button>
                    </Column>
                }
            </Row>
        </CardFooter>
    </Card>
}