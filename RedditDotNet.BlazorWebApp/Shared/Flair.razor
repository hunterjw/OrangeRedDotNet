@using RedditDotNet.Models
@using RedditDotNet.Models.Links

@if (Over18)
{
    <span class="badge bg-danger me-1">NSFW</span>
}
@if (Spoiler)
{
    <span class="badge bg-warning text-dark me-1">Spoiler</span>
}
@if (Locked)
{
    <span class="badge bg-warning text-dark me-1">Locked</span>
}
@if (Stickied)
{
    <span class="badge bg-success me-1">Stickied</span>
}
@if (Archived)
{
    <span class="badge bg-secondary me-1">Archived</span>
}
@if (IsOriginalContent)
{
    <span class="badge bg-primary me-1">OC</span>
}

@switch (FlairType?.ToLower())
{
    case "text":
        <span class="@FlairClass()" style="@FlairStyle()">@FlairText</span>
        break;
    case "richtext":
        <span class="@FlairClass()" style="@FlairStyle()">
            @if (FlairRichtext?.Count > 0)
            {
                @foreach (FlairRichtext flair in FlairRichtext)
                {
                    switch (flair?.Type.ToLower())
                    {
                        case "text":
                            @flair?.Text
                            break;
                        case "emoji":
                            <img src="@flair?.Url" alt="@flair?.Tag" class="flair-emoji" />
                            break;
                        default:
                            break;
                    }
                }
            }
            else
            {
                @FlairText
            }
        </span>
        break;
    default:
        break;
}