name: Deploy Blazor Web App to GitHub Pages

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy-to-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      
      - name: Publish Blazor Project
        run: dotnet publish OrangeRedDotNet.BlazorWebApp/OrangeRedDotNet.BlazorWebApp.csproj -c Release -o release --nologo
      
      - name: Update App Settings
        shell: pwsh
        env:
          APP_SETTINGS: ${{ secrets.AppSettings }}
        run: |
          $env:APP_SETTINGS | Out-File release/wwwroot/appsettings.json
      
      - name: Fix service-worker-assets.js hashes
        working-directory: release/wwwroot
        run: |
          jsFile=$(<service-worker-assets.js)
          # remove JavaScript from contents so it can be interpreted as JSON
          json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
          # grab the assets JSON array
          assets=$(echo "$json" | jq '.assets[]' -c)
          for asset in $assets
          do
            oldHash=$(echo "$asset" | jq '.hash')
            #remove leading and trailing quotes
            oldHash="${oldHash:1:-1}"
            path=$(echo "$asset" | jq '.url')
            #remove leading and trailing quotes
            path="${path:1:-1}"
            newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
            
            if [ $oldHash != $newHash ]; then
              # escape slashes for json
              oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
              newHash=$(echo "$newHash" | sed 's;/;\\/;g')
              echo "Updating hash for $path from $oldHash to $newHash"
              # escape slashes second time for sed
              oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
              jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
            fi
          done
      
          echo -n "$jsFile" > service-worker-assets.js
      
      - name: copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html
      
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
      
      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'release/wwwroot'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
      
